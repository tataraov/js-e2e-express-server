# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- bash: |
        echo "Work Directory@@@@@@@@@@@@@@@@@@"
        echo $(System.DefaultWorkingDirectory) 
        set -e
        node --version
        npm --version
        echo "npm cache location"
        npm config get cache
        echo "cleaning up workspace"
        rm -rf .angular
        rm -rf build
        rm -rf dist 
  #ToDo:Upload result of lint to sonarqube. (Use several rules in config file).
  displayName: 'Cleanup NPM Cache & Workspace'
- task: ArtifactoryNpm@2
  inputs:
    command: 'ci'
    artifactoryService: 'ArtifactoryCloud'
    sourceRepo: 'san-npm'
    #workingFolder: '$(System.DefaultWorkingDirectory)'
    collectBuildInfo: true
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
    includeEnvVars: true
- task: ArtifactoryNpm@2
  inputs:
    command: 'install'
    artifactoryService: 'ArtifactoryCloud'
    sourceRepo: 'san-npm'
    workingFolder: '$(System.DefaultWorkingDirectory)'
    collectBuildInfo: true
    threads: '1'
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
    includeEnvVars: true

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: '*.tgz' 
    targetFolder: $(Build.ArtifactStagingDirectory)/npm
  displayName: 'Copy npm package'

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: 'package.json' 
    targetFolder: $(Build.ArtifactStagingDirectory)/npm
  displayName: 'Copy package.json'   

- task: ArtifactoryNpm@2
  inputs:
    command: 'pack and publish'
    artifactoryService: 'ArtifactoryCloud'
    targetRepo: 'san-npm'
    collectBuildInfo: true
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
    includeEnvVars: true
- task: ArtifactoryPublishBuildInfo@1
  inputs:
    artifactoryService: 'ArtifactoryCloud'
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
- task: ArtifactoryXrayScan@1
  inputs:
    artifactoryService: 'ArtifactoryCloud'
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
    allowFailBuild: false